apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: 'com.google.gms.google-services'


// React Native Configuration
react {
    // Uncomment and set directories if necessary
    // root = file("../../")
    // reactNativeDir = file("../../node_modules/react-native")
    // codegenDir = file("../../node_modules/@react-native/codegen")
    // cliFile = file("../../node_modules/react-native/cli.js")

    autolinkLibrariesWithApp() // Autolink libraries
}

def enableProguardInReleaseBuilds = false

def jscFlavor = 'org.webkit:android-jsc:+' // or 'org.webkit:android-jsc-intl:+' if needed

project.ext.react = [
    entryFile: file("index.js"),
    enableHermes: true,  // Add this if you're using Hermes
]

android {
    compileSdk rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    ndkVersion rootProject.ext.ndkVersion

    namespace "com.agrieldo"
    defaultConfig {
        applicationId "com.agrieldo"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release // Use your own keystore in production
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    // React Native Dependencies
    implementation("com.facebook.react:react-android")
    implementation project(':react-native-gesture-handler')

    // Google Maps and Location Services
    implementation 'com.google.android.gms:play-services-base:18.0.1'
    implementation 'com.google.android.gms:play-services-maps:18.1.0' // Use the latest version
    implementation 'com.google.android.gms:play-services-location:21.0.1' // Use the latest version

    if (project.ext.react.enableHermes) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

// Google Services Plugin
apply plugin: 'com.google.gms.google-services'
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
